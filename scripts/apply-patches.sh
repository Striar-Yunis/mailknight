#!/bin/bash
# Apply Mailknight patches to source code
# Usage: apply-patches.sh <project_name> <version>

set -euo pipefail

PROJECT_NAME="${1:-}"
VERSION="${2:-}"

if [[ -z "$PROJECT_NAME" || -z "$VERSION" ]]; then
    echo "Usage: $0 <project_name> <version>"
    exit 1
fi

echo "üîß Applying patches for $PROJECT_NAME version $VERSION"

PATCH_DIR="patches/$PROJECT_NAME"
SOURCE_DIR="source/$PROJECT_NAME"

if [[ ! -d "$SOURCE_DIR" ]]; then
    echo "‚ùå Source directory $SOURCE_DIR does not exist"
    exit 1
fi

cd "$SOURCE_DIR"

# Create patch application log
PATCH_LOG="../patch-application.log"
echo "Patch application log for $PROJECT_NAME $VERSION" > "$PATCH_LOG"
echo "Date: $(date)" >> "$PATCH_LOG"
echo "---" >> "$PATCH_LOG"

# Apply version-specific patches
VERSION_PATCH_DIR="../../$PATCH_DIR/$VERSION"
if [[ -d "$VERSION_PATCH_DIR" ]]; then
    echo "üì¶ Applying version-specific patches from $VERSION_PATCH_DIR"
    for patch in "$VERSION_PATCH_DIR"/*.patch; do
        if [[ -f "$patch" ]]; then
            echo "  Applying: $(basename "$patch")"
            if git apply --check "$patch" 2>/dev/null; then
                git apply "$patch"
                echo "‚úÖ Successfully applied: $(basename "$patch")" | tee -a "$PATCH_LOG"
            else
                echo "‚ùå Failed to apply: $(basename "$patch")" | tee -a "$PATCH_LOG"
                exit 1
            fi
        fi
    done
else
    echo "‚ÑπÔ∏è  No version-specific patches found for $VERSION"
fi

# Apply common patches
COMMON_PATCH_DIR="../../$PATCH_DIR/common"
if [[ -d "$COMMON_PATCH_DIR" ]]; then
    echo "üîÑ Applying common patches from $COMMON_PATCH_DIR"
    for patch in "$COMMON_PATCH_DIR"/*.patch; do
        if [[ -f "$patch" ]]; then
            echo "  Applying: $(basename "$patch")"
            if git apply --check "$patch" 2>/dev/null; then
                git apply "$patch"
                echo "‚úÖ Successfully applied: $(basename "$patch")" | tee -a "$PATCH_LOG"
            else
                echo "‚ö†Ô∏è  Skipping incompatible patch: $(basename "$patch")" | tee -a "$PATCH_LOG"
            fi
        fi
    done
else
    echo "‚ÑπÔ∏è  No common patches found"
fi

# Commit applied patches
if [[ -n "$(git status --porcelain)" ]]; then
    git add .
    git commit -m "Apply Mailknight patches for $VERSION

Applied patches:
$(cat "$PATCH_LOG" | grep "Successfully applied" | sed 's/.*: /- /')

Generated by: $(basename "$0")
Timestamp: $(date -Iseconds)"
    
    echo "‚úÖ Patches committed to source tree"
else
    echo "‚ÑπÔ∏è  No patches were applied or no changes were made"
fi

echo "üìÑ Patch application completed. Log saved to: $PATCH_LOG"