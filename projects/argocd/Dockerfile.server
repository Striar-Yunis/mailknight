# ArgoCD Server Runtime Container
# Uses pre-built binaries from binary build stage
# Based on secure runtime base container

FROM mailknight/runtime-base:latest

# Switch to root temporarily for setup
USER root

# Install server-specific runtime dependencies
RUN microdnf install -y \
        git \
        openssh-clients && \
    microdnf clean all

# Copy pre-built binaries from build artifacts
COPY binaries/argocd /usr/local/bin/argocd
COPY binaries/argocd-server /usr/local/bin/argocd-server

# Create symbolic links for compatibility (ArgoCD v3+ uses single binary with different entry points)
RUN ln -sf /usr/local/bin/argocd /usr/local/bin/argocd-server-main

# Set secure permissions
RUN chown root:root /usr/local/bin/argocd* && \
    chmod 755 /usr/local/bin/argocd*

# Create ArgoCD configuration directories
RUN mkdir -p /app/config/{ssh,tls,gpg/source,gpg/keys} && \
    chown -R appuser:appuser /app/config && \
    chmod 0700 /app/config/gpg/keys

# SSH known hosts support
RUN touch /app/config/ssh/ssh_known_hosts && \
    ln -s /app/config/ssh/ssh_known_hosts /etc/ssh/ssh_known_hosts

# Switch back to non-root user
USER appuser

# Server-specific environment variables
ENV ARGOCD_SERVER_INSECURE=false \
    ARGOCD_SERVER_ROOTPATH=/ \
    ARGOCD_USER_ID=999

# Create custom health check for ArgoCD server
COPY --chown=appuser:appuser <<EOF /app/health
#!/bin/sh
# ArgoCD server health check
exec /usr/local/bin/argocd admin settings rbac can get applications --server localhost:8080 --plaintext --insecure 2>/dev/null || exit 1
EOF

RUN chmod +x /app/health

# Expose server ports
EXPOSE 8080 8083

# Use tini for proper signal handling (install as root, use as appuser)
USER root
RUN microdnf install -y tini && microdnf clean all
USER appuser

# Default command
ENTRYPOINT ["/usr/bin/tini", "--"]
CMD ["/usr/local/bin/argocd-server"]

# Container metadata
LABEL name="mailknight/argocd-server" \
      component="server" \
      version="v3.0.11-mailknight" \
      description="FIPS-compliant ArgoCD API Server" \
      vendor="Mailknight" \
      security.fips="enabled" \
      org.opencontainers.image.source="https://github.com/Striar-Yunis/mailknight"