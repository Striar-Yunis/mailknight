# ArgoCD Repository Server Runtime Container
# Uses pre-built binaries from binary build stage
# Based on secure runtime base container

FROM mailknight/runtime-base:latest

# Switch to root temporarily for setup
USER root

# Install repo-server-specific runtime dependencies and tools
RUN microdnf install -y \
        git \
        git-lfs \
        openssh-clients \
        gnupg2 && \
    microdnf clean all

# Install Helm for GitOps operations
ARG HELM_VERSION=3.12.0
RUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && \
    chmod 700 get_helm.sh && \
    ./get_helm.sh --version v${HELM_VERSION} && \
    rm get_helm.sh

# Install Kustomize for GitOps operations
ARG KUSTOMIZE_VERSION=5.1.1
RUN curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | \
    bash -s ${KUSTOMIZE_VERSION} /usr/local/bin

# Copy pre-built binaries from build artifacts
COPY binaries/argocd /usr/local/bin/argocd
COPY binaries/argocd-repo-server /usr/local/bin/argocd-repo-server

# Create symbolic links for compatibility
RUN ln -sf /usr/local/bin/argocd /usr/local/bin/argocd-repo-server-main

# Set secure permissions
RUN chown root:root /usr/local/bin/argocd* && \
    chmod 755 /usr/local/bin/argocd*

# Create ArgoCD repository and configuration directories
RUN mkdir -p /app/config/{ssh,tls,gpg/source,gpg/keys} && \
    mkdir -p /tmp/repos && \
    chown -R appuser:appuser /app/config /tmp/repos && \
    chmod 0700 /app/config/gpg/keys

# Install tini for proper signal handling
RUN microdnf install -y tini && microdnf clean all

# Install tini for proper signal handling
RUN curl -fsSL -o /usr/local/bin/tini https://github.com/krallin/tini/releases/download/v0.19.0/tini-amd64 && \
    chmod +x /usr/local/bin/tini

# Switch back to non-root user
USER appuser

# Repo server-specific environment variables
ENV ARGOCD_EXEC_TIMEOUT=90s \
    ARGOCD_REPO_SERVER_STRICT_TLS=true \
    ARGOCD_USER_ID=999 \
    ARGOCD_REPO_CACHE_EXPIRATION=24h

# Create custom health check for ArgoCD repo server
COPY --chown=appuser:appuser argocd-repo-server-health.sh /app/health

RUN chmod +x /app/health

# Expose repo-server port
EXPOSE 8081

# Default command
ENTRYPOINT ["/usr/local/bin/tini", "--"]
CMD ["/usr/local/bin/argocd-repo-server"]

# Container metadata
LABEL name="mailknight/argocd-repo-server" \
      component="repo-server" \
      version="v3.0.11-mailknight" \
      description="FIPS-compliant ArgoCD Repository Server" \
      vendor="Mailknight" \
      security.fips="enabled" \
      org.opencontainers.image.source="https://github.com/Striar-Yunis/mailknight"