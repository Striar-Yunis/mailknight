# ArgoCD Application Controller Runtime Container
# Uses pre-built binaries from binary build stage
# Based on secure runtime base container

FROM mailknight/runtime-base:latest

# Switch to root temporarily for setup
USER root

# Copy pre-built binaries from build artifacts
COPY binaries/argocd /usr/local/bin/argocd
COPY binaries/argocd-application-controller /usr/local/bin/argocd-application-controller

# Create symbolic links for compatibility
RUN ln -sf /usr/local/bin/argocd /usr/local/bin/argocd-application-controller-main

# Set secure permissions
RUN chown root:root /usr/local/bin/argocd* && \
    chmod 755 /usr/local/bin/argocd*

# Create ArgoCD configuration directories
RUN mkdir -p /app/config/{ssh,tls,gpg/source,gpg/keys} && \
    chown -R appuser:appuser /app/config && \
    chmod 0700 /app/config/gpg/keys

# Install tini for proper signal handling
RUN curl -fsSL -o /usr/local/bin/tini https://github.com/krallin/tini/releases/download/v0.19.0/tini-amd64 && \
    chmod +x /usr/local/bin/tini

# Switch back to non-root user
USER appuser

# Controller-specific environment variables
ENV ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER=argocd-repo-server:8081 \
    ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS=60 \
    ARGOCD_USER_ID=999

# Create custom health check for ArgoCD application controller
COPY --chown=appuser:appuser argocd-controller-health.sh /app/health

RUN chmod +x /app/health

# Default command
ENTRYPOINT ["/usr/local/bin/tini", "--"]
CMD ["/usr/local/bin/argocd-application-controller"]

# Container metadata
LABEL name="mailknight/argocd-application-controller" \
      component="application-controller" \
      version="v3.0.11-mailknight" \
      description="FIPS-compliant ArgoCD Application Controller" \
      vendor="Mailknight" \
      security.fips="enabled" \
      org.opencontainers.image.source="https://github.com/Striar-Yunis/mailknight"