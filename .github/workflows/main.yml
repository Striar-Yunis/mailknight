---
name: Mailknight Main Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly to check for upstream updates
    - cron: '0 6 * * 1'

env:
  # Global variables for all projects
  FIPS_ENABLED: "true"
  TRIVY_VERSION: "0.48.0"
  SYFT_VERSION: "0.100.0"
  COSIGN_VERSION: "2.2.2"

  # Build hardening flags
  CFLAGS: "-fstack-protector-strong -D_FORTIFY_SOURCE=2 -fPIE"
  CXXFLAGS: "-fstack-protector-strong -D_FORTIFY_SOURCE=2 -fPIE"
  LDFLAGS: "-Wl,-z,relro,-z,now -pie"

jobs:
  # Validate pipeline configuration
  validate-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate configuration in UBI8 container
        run: |
          docker run --rm \
            -v "$GITHUB_WORKSPACE:/workspace" \
            -w /workspace \
            -e FIPS_ENABLED="$FIPS_ENABLED" \
            -e TRIVY_VERSION="$TRIVY_VERSION" \
            -e SYFT_VERSION="$SYFT_VERSION" \
            -e COSIGN_VERSION="$COSIGN_VERSION" \
            registry.access.redhat.com/ubi8/ubi-minimal:latest \
            sh -c '
              microdnf update -y
              microdnf install -y git wget curl ca-certificates python3 tar
              echo "Validating Mailknight pipeline configuration..."
              chmod +x scripts/validate-config.sh
              scripts/validate-config.sh
            '

  # Detect changes and trigger appropriate project workflows
  detect-changes:
    runs-on: ubuntu-latest
    needs: validate-pipeline
    outputs:
      argocd-changed: ${{ steps.changes.outputs.argocd }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect project changes
        id: changes
        run: |
          # Check if ArgoCD project files changed
          if git diff --name-only HEAD~1 HEAD | \
             grep -E "(projects/argocd/|patches/argocd/|\.mailknight\.yml|scripts/)" \
             > /dev/null; then
            echo "argocd=true" >> $GITHUB_OUTPUT
            echo "ArgoCD changes detected"
          else
            echo "argocd=false" >> $GITHUB_OUTPUT
            echo "No ArgoCD changes detected"
          fi

  # Trigger ArgoCD workflow if changes detected
  trigger-argocd:
    needs: [validate-pipeline, detect-changes]
    if: needs.detect-changes.outputs.argocd-changed == 'true'
    uses: ./.github/workflows/argocd.yml
    secrets: inherit
