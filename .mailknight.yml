# Mailknight GitLab CI Template
# Shared template for all Mailknight projects

.mailknight-base:
  image: registry.access.redhat.com/ubi8/ubi-minimal:latest
  before_script:
    - microdnf update -y
    - microdnf install -y git wget curl ca-certificates findutils
    - echo "FIPS Mode Check:"
    - if [ -f /proc/sys/crypto/fips_enabled ]; then cat /proc/sys/crypto/fips_enabled; fi
  variables:
    # Security and build hardening
    CFLAGS: "-fstack-protector-strong -D_FORTIFY_SOURCE=2 -fPIE -O2"
    CXXFLAGS: "-fstack-protector-strong -D_FORTIFY_SOURCE=2 -fPIE -O2"
    LDFLAGS: "-Wl,-z,relro,-z,now -pie"
    CGO_CFLAGS: "-fstack-protector-strong -D_FORTIFY_SOURCE=2"
    CGO_LDFLAGS: "-Wl,-z,relro,-z,now"
    
    # FIPS compliance
    OPENSSL_FORCE_FIPS_MODE: "1"
    GOLANG_FIPS: "1"
    
    # Build reproducibility
    SOURCE_DATE_EPOCH: "1672531200"  # 2023-01-01
    
.fetch-source:
  extends: .mailknight-base
  stage: fetch-source
  script:
    - scripts/fetch-upstream.sh ${PROJECT_NAME} ${UPSTREAM_VERSION}
  artifacts:
    paths:
      - source/
    expire_in: 1 hour
  cache:
    key: "source-${PROJECT_NAME}-${UPSTREAM_VERSION}"
    paths:
      - source/

.apply-patches:
  extends: .mailknight-base
  stage: apply-patches
  needs: ["fetch-source"]
  script:
    - scripts/apply-patches.sh ${PROJECT_NAME} ${UPSTREAM_VERSION}
  artifacts:
    paths:
      - source/
    expire_in: 1 hour

.build-binary:
  extends: .mailknight-base
  stage: build
  needs: ["apply-patches"]
  script:
    - scripts/build-project.sh ${PROJECT_NAME}
  artifacts:
    paths:
      - build/
      - sbom.json
    expire_in: 1 day
    reports:
      cyclonedx: sbom.json

.build-container:
  extends: .mailknight-base
  stage: build-containers
  image: docker:24-dind
  services:
    - docker:24-dind
  needs: ["build-binary"]
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
    CONTAINER_NAME: "main"  # Default container name, can be overridden
    DOCKERFILE: "Dockerfile"  # Default dockerfile, can be overridden
  before_script:
    - apk add --no-cache git curl
  script:
    - scripts/build-container.sh ${PROJECT_NAME} ${UPSTREAM_VERSION} ${CONTAINER_NAME} ${DOCKERFILE}
  artifacts:
    paths:
      - images/${CONTAINER_NAME}/
      - image-sbom-${CONTAINER_NAME}.json
    expire_in: 1 day

.scan-vulnerabilities:
  extends: .mailknight-base
  stage: scan
  needs: ["build-container"]
  variables:
    CONTAINER_NAME: "main"  # Default container name, can be overridden
  script:
    - scripts/install-trivy.sh
    - scripts/scan-image.sh ${PROJECT_NAME} ${UPSTREAM_VERSION} ${CONTAINER_NAME}
  artifacts:
    paths:
      - scan-results/${CONTAINER_NAME}/
    expire_in: 1 week
    reports:
      dependency_scanning: scan-results/${CONTAINER_NAME}/trivy-dependency.json
      container_scanning: scan-results/${CONTAINER_NAME}/trivy-container.json
  allow_failure: false

.test-fips-compliance:
  extends: .mailknight-base
  stage: test
  needs: ["build-container"]
  variables:
    CONTAINER_NAME: "main"  # Default container name, can be overridden
  script:
    - scripts/test-fips-compliance.sh ${PROJECT_NAME} ${UPSTREAM_VERSION} ${CONTAINER_NAME}
  artifacts:
    paths:
      - test-results/${CONTAINER_NAME}/
    expire_in: 1 week
    reports:
      junit: test-results/${CONTAINER_NAME}/fips-compliance.xml

.release-artifacts:
  extends: .mailknight-base
  stage: release
  needs: 
    - "scan-vulnerabilities"
    - "test-fips-compliance"
  script:
    - scripts/release-artifacts.sh ${PROJECT_NAME} ${UPSTREAM_VERSION}
  artifacts:
    paths:
      - releases/
    expire_in: 1 month
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+.*/'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: manual